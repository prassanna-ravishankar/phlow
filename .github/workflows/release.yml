name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    uses: ./.github/workflows/test.yml

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for version bumping

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        python-version: "3.11"

    - name: Install dependencies
      run: |
        uv sync --extra fastapi --extra rbac --extra redis --extra monitoring --extra examples --dev

    - name: Bump version automatically
      run: |
        # Extract version from tag (remove 'v' prefix)
        NEW_VERSION=${GITHUB_REF_NAME#v}
        echo "Bumping version to $NEW_VERSION"
        uv version $NEW_VERSION

    - name: Build package
      run: |
        uv build

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        uv publish
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true

  docs:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        python-version: "3.11"

    - name: Install dependencies
      run: |
        uv sync --extra fastapi --extra rbac --extra redis --extra monitoring --extra examples --dev

    - name: Setup GitHub Pages
      uses: actions/configure-pages@v4

    - name: Build documentation
      run: |
        # Create a simple docs site
        mkdir -p _site
        cp README.md _site/index.md
        cp -r docs/* _site/ 2>/dev/null || true

        # Create a simple HTML wrapper for GitHub Pages
        cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <title>Phlow Documentation</title>
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;
                    max-width: 900px;
                    margin: 0 auto;
                    padding: 20px;
                    line-height: 1.6;
                }
                pre { background: #f6f8fa; padding: 1em; border-radius: 6px; overflow-x: auto; }
                code { background: #f6f8fa; padding: 0.2em 0.4em; border-radius: 3px; }
                blockquote { border-left: 4px solid #dfe2e5; padding-left: 1em; margin-left: 0; }
            </style>
        </head>
        <body>
            <div id="content"></div>
            <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
            <script>
                fetch('index.md')
                    .then(response => response.text())
                    .then(text => {
                        document.getElementById('content').innerHTML = marked.parse(text);
                    });
            </script>
        </body>
        </html>
        EOF

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
