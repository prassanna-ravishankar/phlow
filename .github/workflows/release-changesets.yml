name: Release (Changesets)

on:
  # Disabled by default - enable if you want to use Changesets
  # push:
  #   branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: npm run release
          title: "Release: Version Packages"
          commit: "Release: Version Packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Python package
        if: steps.changesets.outputs.published == 'true'
        run: |
          cd packages/phlow-auth-python
          pip install build twine
          python -m build

      - name: Publish to PyPI
        if: steps.changesets.outputs.published == 'true'
        run: |
          cd packages/phlow-auth-python
          python -m twine upload dist/* --username __token__ --password ${{ secrets.PYPI_TOKEN }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          name: Release v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          body: |
            ## Changes
            
            ${{ steps.changesets.outputs.summary }}
            
            ## Packages Published
            
            ${{ steps.changesets.outputs.publishedPackages }}
          draft: false
          prerelease: false
          generate_release_notes: true